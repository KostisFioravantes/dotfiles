(defvar current_ws 1)

	(defwidget bar []
	 (centerbox :orientation "h"
	  (workspaces)
	  (music)
	  (sidestuff)))

	(defwidget sidestuff []
	 (box :class "sidestuff" :orientation "h" :space-evenly false :halign "end"
	  (metric :label "ðŸ”Š"
	   :value volume
	   :onchange "amixer -D pulse sset Master {}%")
	  (metric :label "RAM"
	   :value {EWW_RAM.used_mem_perc}
	   :onchange "")
	  (metric :label "ðŸ’¾"
	   :value {round((1 - (EWW_DISK["/"].free / EWW_DISK["/"].total)) * 100, 0)}
	   :onchange "")
	  time))

	(defwidget workspaces []
	 (box :class "workspaces"
	  :orientation "h"
	  :space-evenly true
	  :halign "start"
	  :spacing 4
	  (button :onclick "wmctrl -s 0 && eww update current_ws=1"
	   :class {current_ws == 1 ? "active" : ""} 1)
	  (button :onclick "wmctrl -s 1 && eww update current_ws=2"
	   :class {current_ws == 2 ? "active" : ""} 2)
	  (button :onclick "wmctrl -s 2 && eww update current_ws=3"
	   :class {current_ws == 3 ? "active" : ""} 3)
	  (button :onclick "wmctrl -s 3 && eww update current_ws=4"
	   :class {current_ws == 4 ? "active" : ""} 4)))

	(defwidget music []
	 (box :class "music"
	  :orientation "h"
	  :space-evenly false
	  :halign "center"))


	(defwidget metric [label value onchange]
	 (box :orientation "h"
	  :class "metric"
	  :space-evenly false
	  (box :class "label" label)
	  (scale :min 0
	   :max 101
	   :active {onchange != ""}
	   :value value
	   :onchange onchange)))


	(defpoll volume :interval "1s"
	 "scripts/getvol")

	(defpoll time :interval "10s"
	 "date '+%A %d %b %Y, %H:%M'")

	(defwindow bar
	 :monitor 0
	 :windowtype "dock"
	 :geometry (geometry :x "0%"
		 :y "0%"
		 :width "100%"
		 :height "20px"
		 :anchor "top center")
	 :reserve (struts :side "top" :distance "20px")
	 (bar))
